[tool.poetry]
name = "beaker-pyteal"
version = "1.1.2"
description = "A Framework for building PyTeal Applications"
license = "MIT"
authors = ["Ben Guidarelli <ben@algorand.com>"]
readme = "README.md"
homepage = "https://beaker.algo.xyz"
repository = "https://github.com/algorand-devrel/beaker"
keywords = ["pyteal", "algorand"]
classifiers = ["Development Status :: 5 - Production/Stable"]
packages = [{ include = "beaker" }]

[tool.poetry.dependencies]
python = "^3.10"
pyteal = "^0.26.1"
py-algorand-sdk = ">=2.5.0"
algokit-utils = "^2.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
mypy = "^1.0.0"
pytest-cov = "^4.0.0"
pre-commit = "^2.20.0"
python-semantic-release = "^7.32.2"
pip-audit = "^2.4.12"
pytest-xdist = "^3.1.0"
ruff = "^0.0.252"
black = "^24.8.0"

[tool.poetry.group.docs.dependencies]
sphinx = "~5.0.2"
sphinx-rtd-theme = "~1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
remove_dist = false
build_command = "poetry build --format wheel"
version_source = "tag"
major_on_zero = true
upload_to_repository = false
tag_commit = true
branch = "master"
commit_message = "{version}\n\nskip-checks: true"
tag_format = "{version}"

[tool.pytest.ini_options]
markers = [
    "network: marks tests as slow network tests (deselect with '-m \"not network\"')",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "if TYPE_CHECKING:",
    "@overload",
    "@typing.overload",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.ruff]
select = [
    "E",
    "F",
    "ANN",
    "UP",
    "N",
    "C",
    "B",
    "YTT",
    "W",
    "FBT",
    "Q",
    "RUF",
    "I",
]
ignore = [
    "ANN101", # missing type for self parameter
    "ANN102", # missing type for cls parameter
    "E501",   # line too long - black takes care of this for us
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
    "docs",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/state_test.py" = ["ANN001", "ANN201", "ANN401"]
"beaker/lib/*.py" = ["N802"]                           # lowercase function names

[tool.ruff.flake8-annotations]
mypy-init-return = true

[tool.ruff.isort]
forced-separate = ["tests", "examples"]
